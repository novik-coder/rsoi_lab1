openapi: 3.0.0
info:
  title: Person API
  version: 1.0.0
  description: API for managing person records.

paths:
  /persons:
    get:
      summary: Retrieve all persons
      operationId: getAllPersons
      responses:
        '200':
          description: A list of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    
    post:
      summary: Create a new person
      operationId: createPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /persons/{personId}:
    get:
      summary: Retrieve a person by ID
      operationId: getPersonById
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A person object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found

    patch:
      summary: Update an existing person
      operationId: updatePerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Person updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found

    delete:
      summary: Delete a person
      operationId: deletePerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Person deleted successfully
        '404':
          description: Person not found

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          example: "123"
        name:
          type: string
          example: "John Doe"
        age:
          type: integer
          example: 30
        email:
          type: string
          example: "johndoe@example.com"
      required:
        - name
        - age
